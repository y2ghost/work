# 设置命令前缀 C-b to C-a
set -g prefix C-a

# 释放绑定
unbind C-b

# 设置Prefix和命令的延迟
set -s escape-time 1

# 绑定Ctrl-A
bind C-a send-prefix

# 窗口的索引开始值1
set -g base-index 1

# 面板的索引开始值1
set -w -g pane-base-index 1

# 重新加载配置
bind r \
    source-file ~/.tmux.conf \; \
    display-message "Configuration reloaded"

# 绑定分割窗口快捷键
bind | split-window -h
bind - split-window -v

# 绑定h,j,k,l键切换面板
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# 窗口选择快捷键
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# 绑定H,J,K,L重置面板大小快捷键
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set -g mouse off
set -g default-terminal "tmux-256color"
set -a terminal-overrides ",*256col*:RGB"
set -g status-style fg=white,bg=black
set -g window-status-style fg=cyan,bg=black
set -g window-status-current-style fg=white,bold,bg=red
set -w -g pane-border-style fg=green,bg=black
set -w -g pane-active-border-style fg=black,bg=yellow
set -w -g pane-border-lines single
set -g pane-border-indicators arrows
set -g pane-border-status top
set -g window-style fg=color240,bg=color235
set -g window-active-style fg=white,bg=black
set -g message-style fg=white,bg=color242,bold
set -g status-left-length 40
set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set -g status-right "#[fg=purple]#(~/battery Discharging) | #[fg=cyan]%d %b %R"
set -g status-interval 60
set -g status-justify centre
set -w -g monitor-activity on
set -w -g visual-activity on
set -w -g mode-keys vi

bind Escape copy-mode-vi
bind -T copy-mode-vi v send -X begin-selection

unbind p
bind p paste-buffer

bind C-s set-window-option synchronize-panes

bind _ split-window -v -c  "#{pane_current_path}"
bind \ split-window -h -c "#{pane_current_path}"

bind s choose-tree -sZ -O name

bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

if-shell "uname | grep -q Darwin" "source-file ~/.tmux.mac.conf"
if-shell "[ -f ~/.tmux.private]" "source ~/.tmux.private"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'

bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
bind -T copy-mode-vi 'C-\' select-pane -l

bind C-l send-keys 'C-l'


bind O display-popup -d "~/" \
                         -x C -y C -w 50% -h 50% \
                         -e "POPUP=true" -E "bash"
bind e  \
  display-menu -T "Quick Menu" -x C -y C \
    "New Window" n "new-window" \
    "Horizontal Split" - "split-window" \
    "Vertical Split"  | "split-window -h" \
    "Close Pane" x "kill-pane"

